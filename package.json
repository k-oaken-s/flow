{
  "name": "flow",
  "version": "1.0.0",
  "main": "./dist/main/main.js",
  "scripts": {
    "clean:unix": "rimraf dist && mkdir -p dist/styles",
    "clean:win": "rimraf dist && mkdir dist && mkdir dist\\styles && mkdir dist\\main && mkdir dist\\preload",
    "clean": "node -e \"process.platform === 'win32' ? process.exit(require('child_process').spawnSync('npm', ['run', 'clean:win'], {stdio:'inherit'}).status) : process.exit(require('child_process').spawnSync('npm', ['run', 'clean:unix'], {stdio:'inherit'}).status)\"",
    "build:store": "esbuild src/main/store.ts --bundle --outfile=dist/main/store.js --platform=node --format=cjs --external:electron --external:electron-store --target=node16 --keep-names",
    "build:ts": "esbuild src/main/main.ts --bundle --outfile=dist/main/main.js --platform=node --format=cjs --external:electron --external:electron-store --external:fsevents --external:fluent-ffmpeg --external:sharp --external:@img/sharp-darwin-x64 --external:@img/sharp-darwin-arm64 --target=node16 --keep-names --sourcemap --log-level=info",
    "build:css": "npx tailwindcss -i ./src/renderer/styles/global.css -o ./dist/styles/global.css",
    "build:app": "esbuild src/renderer/App.tsx --bundle --outfile=dist/app.js --platform=browser --external:electron --alias:@lib=src/lib --alias:@/*=src/renderer/*",
    "build:preload": "esbuild src/preload/index.ts --bundle --outfile=dist/preload/index.js --platform=node --format=cjs --external:electron",
    "copy:html": "cp src/renderer/index.html dist/",
    "build": "npm run clean && npm run build:store && npm run build:ts && npm run build:preload && npm run build:css && npm run build:app && npm run copy:html",
    "watch:css": "npx tailwindcss -i ./src/renderer/styles/global.css -o ./dist/styles/global.css --watch",
    "watch:app": "esbuild src/renderer/App.tsx --bundle --outfile=dist/app.js --platform=browser --watch",
    "dev": "npm run build && concurrently \"npm run watch:css\" \"npm run watch:app\" \"electron .\"",
    "start": "npm run build && electron .",
    "package-mac": "chmod +x package_mac.sh && ./package_mac.sh",
    "package-windows": "npx electron-builder --win"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/k-oaken-s/flow.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/k-oaken-s/flow/issues"
  },
  "homepage": "https://github.com/k-oaken-s/flow#readme",
  "description": "Video Management Application",
  "devDependencies": {
    "@types/chokidar": "^1.7.5",
    "@types/fluent-ffmpeg": "^2.1.27",
    "@types/lodash": "^4.17.15",
    "@types/node": "^22.13.1",
    "@types/react": "^19.0.8",
    "@types/react-dom": "^19.0.3",
    "autoprefixer": "^10.4.20",
    "concurrently": "^9.1.2",
    "cross-env": "^7.0.3",
    "csstype": "^3.1.3",
    "electron": "^34.1.0",
    "electron-builder": "^25.1.8",
    "electron-reload": "^2.0.0-alpha.1",
    "electron-reloader": "^1.2.3",
    "esbuild": "^0.24.2",
    "postcss": "^8.5.1",
    "rimraf": "^5.0.5",
    "tailwindcss": "^3.4.1",
    "tailwindcss-radix": "^2.9.0",
    "typescript": "^5.7.3",
    "undici-types": "^7.3.0",
    "xmlbuilder": "^15.1.1"
  },
  "dependencies": {
    "@ffmpeg/ffmpeg": "^0.12.15",
    "@ffmpeg/util": "^0.12.2",
    "@radix-ui/react-dialog": "^1.1.6",
    "@radix-ui/react-dropdown-menu": "^2.1.6",
    "@radix-ui/react-scroll-area": "^1.2.3",
    "@radix-ui/react-slider": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.3",
    "@radix-ui/react-tooltip": "^1.1.8",
    "chokidar": "^3.5.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "electron-store": "^10.0.1",
    "fluent-ffmpeg": "^2.1.3",
    "framer-motion": "^12.4.1",
    "lodash": "^4.17.21",
    "lucide-react": "^0.474.0",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "vaul": "^0.9.9"
  },
  "optionalDependencies": {
    "@img/sharp-darwin-arm64": "^0.33.1",
    "@img/sharp-darwin-x64": "^0.33.1"
  },
  "build": {
    "files": [
      "dist/main/main.js",
      "dist/main/store.js",
      "dist/preload/**/*",
      "dist/styles/**/*",
      "dist/app.js",
      "dist/index.html",
      "package.json",
      "node_modules/**/*"
    ],
    "asar": true,
    "asarUnpack": [
      "node_modules/@img/sharp-darwin-*/**/*",
      "node_modules/chokidar/**/*"
    ],
    "directories": {
      "output": "dist",
      "buildResources": "build"
    },
    "mac": {
      "target": [
        {
          "target": "zip",
          "arch": [
            "x64",
            "arm64"
          ]
        }
      ],
      "extraFiles": [
        {
          "from": "node_modules/@img/sharp-darwin-arm64",
          "to": "node_modules/@img/sharp-darwin-arm64",
          "filter": [
            "**/*"
          ]
        },
        {
          "from": "node_modules/@img/sharp-darwin-x64",
          "to": "node_modules/@img/sharp-darwin-x64",
          "filter": [
            "**/*"
          ]
        }
      ],
      "artifactName": "${productName}-${version}-${arch}-mac.${ext}",
      "category": "public.app-category.developer-tools",
      "icon": "build/icon.icns",
      "identity": null,
      "hardenedRuntime": false,
      "gatekeeperAssess": false,
      "entitlements": null,
      "entitlementsInherit": null
    },
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "zip",
          "arch": [
            "x64"
          ]
        }
      ],
      "artifactName": "${productName}-${version}-${arch}-win.${ext}",
      "icon": "build/icon.ico"
    },
    "appId": "com.koakens.flow",
    "productName": "Flow",
    "publish": {
      "provider": "github",
      "releaseType": "release",
      "publishAutoUpdate": false
    }
  }
}
